% Budau George 312CC

Tema 1 MN - PageRank

Fisierul Iterative.m contine functia Iterative care calculeaza matricea R (vectorul de PageRank-uri acordat pentru fiecare pagina) folosind algoritmul iterativ.
Aceasta primeste ca argumente numele fisierului din care se citeste (nume), probabilitatea ca un anumit navigator sa continue navigarea (coeficientul d) si eroarea care apare in algoritm (eps).
Pentru citirea informatiilor din fisierul primit ca argument am creat o functie separata (Reading.m) deoarece o voi folosi si in cadrul cerintelor urmatoare. Aceasta deschide fisierul si, dupa citirea informatiilor, returneaza numarul de resurse web (N); matricea de adiacenta (A) reprezentand legaturile dintre noduri; initializeaza matricea pentru calculul recurentei (M); initializeaza vectorul de PageRank-uri (R); citeste si returneaza ultimele 2 valori ale fisierului (val1 si val2) care vor avea folosinta in cadrul ultimei cerinte.
Mai departe se va crea matricea M cu proprietatea ca daca j are legatura catre i atunci M(i, j) = 1 / L(pj) si 0 altfel. Urmeaza apoi calcularea indicelui PageRank prin algoritmul Iterative dupa forma matriceala prezentata in enunt.

Fisierul Algebraic.m contine functia Algebraic care calculeaza matricea R (vectorul PageRank) folosind varianta algebrica de calcul.
Aceasta primeste ca argumente numele fisierului din care se citeste (nume) si probabilitatea ca un anumit navigator sa continue navigarea (coeficientul d). Se citesc datele din fisierul primit ca argument (nume) prin intermediul functiei Reading.m si se creeaza matricea M in acelasi mod cum a fost prezentat anterior. Matricea R se afla dupa formula din algoritmul Algebraic prezentata in enunt. Pentru aceasta este nevoie de aflarea inversei unei matrici T cu ajutorul algoritmului Gram-Schmidt modificat, rezolvand sisteme superior triunghiulare pentru fiecare coloana in parte a matricei unitate I (am folosit functia SST.m pentru rezolvarea sistemelor superior triunghiulare).

Fisierul Apartenenta.m contine functia Apartenenta care calculeaza valoarea functiei membru in punctul x, primit ca argument. Aceasta primeste ca argumente, pe langa x, valorile val1 si val2 de la finalul fisierului de intrare. Functia membru se creeaza conform specificatiilor din enuntul temei: 0 cand x este intre [0, val1), a * x + b cand x este intre [val1, val2] si 1 cand x este intre (val2, 1), unde coeficientii a si b sunt valori calculate astfel incat functia sa fie continua. 
Fisierul PageRank.m contine functia PageRank care primeste ca date de intrare un nume de fisier (nume), parametrul d si parametrul eps (avand aceeasi interpretare ca pana acum). Se citesc datele din fisierul primit ca argument (nume) prin intermediul functiei Reading.m si se creeaza un fisier de iesire al carui nume este la fel ca acela al fisierului de intrare la care se adauga extensia .out (nume.out). In acest fisier se va scrie, pe prima linie, numarul N (numarul de pagini web analizate), adaugand apoi un rand gol, se va scrie vectorul PageRank calculat cu algoritmul Iterative, apoi se va adauga un rand gol si se va scrie vectorul PageRank calculat cu algoritmul Algebraic, adaugand la final un rand gol. Dupa acest pas, se sorteaza in ordine descrescatoare vectorul PageRank calculat de cel de-al doilea algoritm folosind functia sort implicita si se noteaza cu PR1 acest vector sortat. Deoarece exista numere aproape egale (difera la zecimale foarte indepartate), am setat o toleranta cu precizie de 17 zecimale pentru crearea clasamentului. Astfel, se scrie in fisier clasamentul celor mai importante pagini, clasament in care intereseaza locul obtinut, numarul paginii care a obtinut acest loc si gradul de apartenenta al acestei pagini la multimea paginilor importante.